Python2.7 code utilizing scikit-learn, pandas, matplotlib, and numpy modules for comapring multiple supervised machine learning algorithms on pandas data frames as an input. Note, none of the algorithms are tuned except the random forest (Ntree ~ 400) and SVM is only tuned by kernel type (linear) for the data generated by randomData.py. Algorithms should be tuned to the input data set. 

randomData.py: Generates data frame containing 2*6 (positive and negative set) random features for binary classification. Data is split into 75% training and 25% testing sets and then randomized.

randomDataPlot.py: Plots positive and negatives features in 2D histograms and plots scatter plots with correlation coefficients for all combination of features..

mlCodeRandomDataCompare.py: Compares 12 supervised learning algorithms based on several metrics and computes the average of 6 metrics with a range from 0 to 1. Plots ROC and PrecisionRecall curves in 2 figures and plots histogram (barplots) of importance for decision tree based  models.

mlCodeRandoDataTuneParameters.py: Uses cross-validation to find model parameters that give thr highest accuracy score. Cross-validation splits the total data se into K-1 training sets and 1 test set. The test set is tested against each traing site and the average accuracy score is used to find the best model parameters. The next version will have plots of score vs parameter with a standard deviation band. 

mlCodeRandomDataPlots.py: Plots the importance of features for a given algorithm (GradientBoosted). Plots 2D for each feature and 3D for 2 chosen features.

See WIKI for sample plots.

Modules:

scikit-learn:  http://scikit-learn.org/
pandas:  http://pandas.pydata.org/
matplotlib: http://matplotlib.org/
numpy: http://www.numpy.org/

References Worth Checking Out:

R.Caruana and A.Niculescu-Mizil. "Data mining in metric space: an empirical analysis of supervised learning performance criteria." Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining 22 Aug. 2004: 69-78.

R.Caruana and A.Niculescu-Mizil. "An empirical comparison of supervised learning algorithms." Proceedings of the 23rd international conference on Machine learning 25 Jun. 2006: 161-168.

To Do:

Add methods to test the stability of models. Do small perturbations in the data see if it causes a large diffference in model output.

Expand random data set allow for more features. Add text and image data. All so, use standard data sets to compare models.

Add internet interface to extract and model data grabbed of the internet.

Add neural network models. 

------------------------------------------------------------------------------------------------------------------------------------------------
Help Wanted:

Looking for some one can creat GUIs, perhaps in Qt. I think this would be a great open source project where there is not a lot of competition. I can write all the back end Python stuff, just need some one who can write a GUI. I was thinking for the inital version, it takes a .csv file, the user picks a model, the data is converted to a format compadible with scikit-lear. They then run the crooss-validation tuner to optimive their model parameters. Once there model is trained and validated, they can add other .csv files to make predictions. Models can be saved with the module pickle.

Later versions will be able to access sql databases and grab data off the web. Let me know if any one is interested, like I said I only know of one other similar software (http://en.wikipedia.org/wiki/Weka_(machine_learning)). It's written in JAVA and not so easy to use.

------------------------------------------------------------------------------------------------------------------------------------------------

Please feel free to contact me if you have any questions, suggestions, or just shoot want to shoot the shit, shoot me an emails at rralich@gmail.com.

If your in the DC area and don't know about it threre is a Python DCMeetUp group that meets on a regulear basis. Check it out at, http://www.meetup.com/dcpython/

-Mike 
