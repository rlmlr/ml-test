Python2.7 code utilizing scikit-learn, pandas, matplotlib, and numpy modules for comapring multiple supervised machine learning algorithms on pandas data frames as an input. Note, none of the algorithms are tuned except the random forest (Ntree ~ 400) and SVM is only tuned by kernel type (linear) for the data generated by randomData.py. Algorithms should be tuned to the input data set. 

randomData.py: Generates data frame containing 2*6 (positive and negative set) random features for binary classification. Data is split into 75% training and 25% testing sets and then randomized.

mlCodeRandomDataCompare.py: Compares 12 supervised learning algorithms based on several metrics and computes the average of 6 metrics with a range from 0 to 1. Plots ROC and PrecisionRecall curves in 2 figures and plots histogram of importance for RandomForest and GradientBoosted models.

mlCodeRandomDataPlots.py: Plots the importance of features for a given algorithm (GradientBoosted). Plots 2D for each feature and 3D for 2 chosen features.

Modules:

scikit-learn:  http://scikit-learn.org/
pandas:  http://pandas.pydata.org/
matplotlib: http://matplotlib.org/
numpy: http://www.numpy.org/

References Worth Checking Out:

R.Caruana and A.Niculescu-Mizil. "Data mining in metric space: an empirical analysis of supervised learning performance criteria." Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining 22 Aug. 2004: 69-78.

R.Caruana and A.Niculescu-Mizil. "An empirical comparison of supervised learning algorithms." Proceedings of the 23rd international conference on Machine learning 25 Jun. 2006: 161-168.
